{"title":"分布式和微服务的区别","uid":"a151887ec11ae6391c8864d43efe6e8e","slug":"attribute","date":"2023-03-28T06:20:55.000Z","updated":"2023-03-28T06:39:54.357Z","comments":true,"path":"api/articles/attribute.json","keywords":null,"cover":"https://cdn.pixabay.com/photo/2015/12/01/20/28/road-1072821_960_720.jpg","content":"<h2 id=\"1-分布式和微服务有什么区别呢？\"><a href=\"#1-分布式和微服务有什么区别呢？\" class=\"headerlink\" title=\"1.分布式和微服务有什么区别呢？\"></a>1.分布式和微服务有什么区别呢？</h2><p>分布式的核心就一个字：拆。只要是将一个项目拆分成了多个模块，并将这些模块分开部署，那就算是分布式。</p>\n<p>如何拆呢？有两种方式：水平拆分，或垂直拆分（也称为“横向拆分”和“垂直拆分”），具体如下：</p>\n<p>水平拆分：根据“分层”的思想进行拆分。例如，可以将一个项目根据“三层架构”拆分成 表示层（jsp+servlet）、业务逻辑层（service）和数据访问层（dao），然后再分开部署：把表示层部署在服务器A上，把service和dao层部署在服务器B上，然后服务器A和服务器B之间通过dubbo等RPC进行进行整合（在左下角的“阅读原文”里有dubbo的视频课程，可以点击学习），如图所示。<br><img src=\"https://img.onl/Krklv\" ></p>\n<p>垂直拆分：根据业务进行拆分。例如，可以根据业务逻辑，将“电商项目”拆分成“订单项目”、“用户项目”和“秒杀项目”。显然这三个拆分后的项目，仍然可以作为独立的项目使用。像这种拆分的方法，就成为垂直拆分。<br><img src=\"https://img.onl/UJE9n9\" ></p>\n<p>什么是微服务呢？</p>\n<p>从名字就能知道，“微服务”就是非常微小的服务。</p>\n<p>微服务可以理解为一种非常细粒度的垂直拆分。例如，以上“订单项目”本来就是垂直拆分后的子项目，但实际上“订单项目”还能进一步拆分为“购物项目”、“结算项目”和“售后项目”，如图。<br><img src=\"https://img.onl/Btuufz\" ></p>\n<p>现在看图中的“订单项目”，它完全可以作为一个分布式项目的组成元素，但就不适合作为微服务的组成元素了（因为它还能再拆，而微服务应该是不能再拆的“微小”服务，类似于“原子性”）。</p>\n<p>总结：</p>\n<p>分布式：拆了就行。</p>\n<p>微服务：细粒度的垂直拆分。</p>\n<h2 id=\"2-Java中不是有GC吗，怎么还有内存泄漏一说？\"><a href=\"#2-Java中不是有GC吗，怎么还有内存泄漏一说？\" class=\"headerlink\" title=\"2.Java中不是有GC吗，怎么还有内存泄漏一说？\"></a>2.Java中不是有GC吗，怎么还有内存泄漏一说？</h2><p>答：Java内存有两种常见问题：内存溢出和内存泄漏。</p>\n<p>内存溢出好理解，就是JVM内存有限。如果对象太多，JVM内存放不下了，就会内存溢出。</p>\n<p>那什么是内存泄漏？首先得明确，GC只会回收那些“不可达”的对象（可以简单理解为，如果一个对象存在着指向它的引用，这个对象就“可达”；如果没有引用指向它，则“不可达”）。</p>\n<p>若一个对象是“无用但可达的”，就会造成内存泄漏。</p>\n<p>如下代码中，obj的值是null，因此是“无用的”；但同时obj又同时被被list引用，因此是“可达”的，所以此时的obj就会造成内存泄漏。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Object obj &#x3D; new Object();\n\nlist.add( obj );\nobj &#x3D; null ;</code></pre>\n<p>除了上面obj这种内存泄漏的情况以外，在实际开发中最常见的内存泄漏就是打开资源后没有调用close()方法。例如socket、io流等，都需要再最后close()一下防止内存泄漏。</p>\n","feature":true,"text":"1.分布式和微服务有什么区别呢？分布式的核心就一个字：拆。只要是将一个项目拆分成了多个模块，并将这些模块分开部署，那就算是分布式。 如何拆呢？有两种方式：水平拆分，或垂直拆分（也称为“横向拆分”和“垂直拆分”），具体如下： 水平拆分：根据“分层”的思想进行拆分。例如，可以将一个项...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"service","slug":"service","count":1,"path":"api/tags/service.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%88%86%E5%B8%83%E5%BC%8F%E5%92%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%E5%91%A2%EF%BC%9F\"><span class=\"toc-text\">1.分布式和微服务有什么区别呢？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-Java%E4%B8%AD%E4%B8%8D%E6%98%AF%E6%9C%89GC%E5%90%97%EF%BC%8C%E6%80%8E%E4%B9%88%E8%BF%98%E6%9C%89%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E4%B8%80%E8%AF%B4%EF%BC%9F\"><span class=\"toc-text\">2.Java中不是有GC吗，怎么还有内存泄漏一说？</span></a></li></ol>","author":{"name":"Sh1mwww","slug":"blog-author","avatar":"https://img.onl/qZjVAP","link":"/","description":"及时行乐","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Nginx攻击方式和解决方案","uid":"e59b750bc82711213370e958d83d7a80","slug":"nginx-attact","date":"2023-03-28T05:46:26.000Z","updated":"2023-03-28T06:00:04.639Z","comments":true,"path":"api/articles/nginx-attact.json","keywords":null,"cover":"https://cdn.pixabay.com/photo/2015/12/01/20/28/forest-1072828_960_720.jpg","text":"3分钟了解 NginxNginx是一款高性能的Web服务器和反向代理服务器。 它可以用来搭建网站、做应用服务器，能够处理大量的并发连接和请求。 静态内容托管（主要）：可以用来做网页、图片、文件的 “静态”内容托管。 动态内容托管（主要）：将经常访问的动态内容缓存到内存中，提高访问...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"nginx","slug":"nginx","count":1,"path":"api/tags/nginx.json"}],"author":{"name":"Sh1mwww","slug":"blog-author","avatar":"https://img.onl/qZjVAP","link":"/","description":"及时行乐","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}