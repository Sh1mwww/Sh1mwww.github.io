{"title":"使用Docker安装实时数仓Postgres","uid":"99fdd285a65685f425e82973c675fc4a","slug":"docker-postgres","date":"2023-03-28T08:37:06.000Z","updated":"2023-03-28T08:50:47.494Z","comments":true,"path":"api/articles/docker-postgres.json","keywords":null,"cover":"https://img.onl/dNVKub","content":"<p>在本文中，我们将一起学习如何使用docker安装PostgreSql。</p>\n<p>我最喜欢使用[<strong>docker</strong>]的原因就是，我们真的不必太担心构建系统或配置。Docker容器非常轻巧 (消耗更少的资源)，非常易于安装和使用。</p>\n<p>如果你还是不太了解和熟悉docker，参阅官方文档，在你的笔记本电脑上安装docker，然后按照步骤操作可能会更有帮助。</p>\n<p>​</p>\n<h1 id=\"拉取Postgres镜像并创建PostgreSQL容器\"><a href=\"#拉取Postgres镜像并创建PostgreSQL容器\" class=\"headerlink\" title=\"拉取Postgres镜像并创建PostgreSQL容器\"></a>拉取Postgres镜像并创建PostgreSQL容器</h1><p>创建Postgres容器的第一件事是要有一个容器镜像。让我们验证我们存储库中的所有镜像，执行以下命令：查看docker中所有镜像。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$ docker images</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">REPOSITORY   TAG           IMAGE ID      CREATED       SIZE\npostgres     14-alpine     a762fe0bf572  2 months ago  216MB\npostgres     14-alpine3.16 a762fe0bf572  2 months ago  216MB\npostgres     14.5-alpine   a762fe0bf572  2 months ago  216MB\npg-dump      13            646d500e76f2  8 months ago  234MB</code></pre>\n\n<p>让我们访问PostgreSQL docker镜像存储库</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$ docker pull postgres:13.0\n13.0: Pulling from library&#x2F;postgres\nbb79b6b2107f: Already exists \ne3dc51fa2b56: Pull complete \nf213b6f96d81: Pull complete \n2780ac832fde: Pull complete \nae5cee1a3f12: Pull complete \n95db3c06319e: Pull complete \n475ca72764d5: Pull complete \n8d602872ecae: Pull complete \nc4fca31f2e3d: Pull complete \na00c442835e0: Pull complete \n2e2305af3390: Pull complete \n6cff852bb872: Pull complete \n25bb0be11543: Pull complete \n4738c099c4ad: Pull complete \nDigest: sha256:8f7c3c9b61d82a4a021da5d9618faf056633e089302a726d619fa467c73609e4\nStatus: Downloaded newer image for postgres:13.0\ndocker.io&#x2F;library&#x2F;postgres:13.0</code></pre>\n\n<p>再次查看本地镜像：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$ docker images</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">REPOSITORY   TAG           IMAGE ID      CREATED       SIZE\npostgres     13.0      \t\t c96f8b6bc0d9  2 years ago   314MB\npostgres     14-alpine     a762fe0bf572  2 months ago  216MB\npostgres     14-alpine3.16 a762fe0bf572  2 months ago  216MB\npostgres     14.5-alpine   a762fe0bf572  2 months ago  216MB\npg-dump      13            646d500e76f2  8 months ago  234MB</code></pre>\n\n<p>接下来，让我们创建第一个Postgres容器。</p>\n<p>执行以下命令查看所有的docker容器</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$ docker ps –all </code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">CONTAINER ID   IMAGE                    COMMAND     CREATED      STATUS      \nbe2b3702b8c7   portainer&#x2F;agent:2.11.1   &quot;.&#x2F;agent&quot;   2 days ago   Up 2 days   </code></pre>\n\n<p>执行以下命令运行docker pg:</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$ docker run -it -d –name postgres_db -e POSTGRES_PASSWORD&#x3D;postgres -d postgres</code></pre>\n\n<p>注意: 要创建容器，使用此命令 <code>docker run -it -d</code></p>\n<p>–name 识别容器的标签</p>\n<p>-e POSTGRES_PASSWORD是创建容器时的强制参数。</p>\n<p>接下来，让我们使用<code>docker ps</code>命令查看正在运行的容器</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$ docker ps</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">CONTAINER ID   IMAGE                    COMMAND     \t\t\t\t\t\t\tCREATED      \t\t\t\tSTATUS      \nbe2b3702b8c7   portainer&#x2F;agent:2.11.1   &quot;.&#x2F;agent&quot;   \t\t\t\t\t\t\t2 days ago   \t\t\t\tUp 2 days   \n67a4705c263c   postgres:13               &quot;docker-entrypoint.s…&quot;   4 months ago        Up 2 days           0.0.0.0:5432-&gt;5432&#x2F;tcp</code></pre>\n\n<p>​</p>\n<h1 id=\"如何通过bash连接访问容器\"><a href=\"#如何通过bash连接访问容器\" class=\"headerlink\" title=\"如何通过bash连接访问容器\"></a>如何通过bash连接访问容器</h1><p>让我们使用以下命令使用bash连接到容器。将会看到有一些Postgres进程在后台运行 (checkpointer、walwriter、stats collector等等)</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">docker exec -it 67a4705c263c &#x2F;bin&#x2F;bash</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">root@67a4705c263c:&#x2F;# ps -ef | grep postgres</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">postgres     1     0  0 Oct30 ?        00:00:02 postgres\npostgres    26     1  0 Oct30 ?        00:00:00 postgres: checkpointer  \npostgres    27     1  0 Oct30 ?        00:00:01 postgres: background writer  \npostgres    28     1  0 Oct30 ?        00:00:01 postgres: walwriter  \npostgres    29     1  0 Oct30 ?        00:00:01 postgres: autovacuum launcher  \npostgres    30     1  0 Oct30 ?        00:00:03 postgres: stats collector  \npostgres    31     1  0 Oct30 ?        00:00:00 postgres: logical replication launcher  \nroot      3505  3498  0 01:05 pts&#x2F;0    00:00:00 grep postgres</code></pre>\n\n<p>​</p>\n<h1 id=\"如何使用psql直接连接到数据库\"><a href=\"#如何使用psql直接连接到数据库\" class=\"headerlink\" title=\"如何使用psql直接连接到数据库\"></a>如何使用psql直接连接到数据库</h1><p>现在，让我们执行psql连接到数据库。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">root@67a4705c263c:&#x2F;# psql -U postgres</code></pre>\n\n<p>连接到数据库的另一种方法是在连接到Postgres容器本身时使用psql。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$ docker exec -it 67a4705c263c psql -U postgres</code></pre>\n\n<p>让我们使用以下查询命令：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">postgres&#x3D;# select now();</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">             now\n-----------------------------\n2022-11-02 01:09:40.608002+00\n(1 row)</code></pre>\n\n<p>​</p>\n<h1 id=\"更改Postgres参数需要什么\"><a href=\"#更改Postgres参数需要什么\" class=\"headerlink\" title=\"更改Postgres参数需要什么\"></a>更改Postgres参数需要什么</h1><p>接下来，让我们尝试将参数shared_buffers从默认值128MB更改为10mb。由于此参数需要重新启动postgres服务，因此我们必须确保这样做才能实现。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">postgres&#x3D;# alter system set shared_buffers&#x3D;10 MB;</code></pre>\n\n<p>重启服务，查看<code>shared_buffers</code> 参数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">postgres&#x3D;# show shared_buffers;</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">shared_buffers\n--------------\n    128MB\n(1 row)</code></pre>\n\n<p>重新启动Postgres容器。如果你想从容器内部重新启动postgres服务，它将崩溃并停止容器。请记住，容器本身就是postgres服务!</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$ docker restart 67a4705c263c</code></pre>\n\n<p>让我们链接pg查看刚才修改参数配置的结果</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$ docker exec -it 67a4705c263c psql -U postgres</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">postgres&#x3D;# show shared_buffers;</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">shared_buffers\n--------------\n    10MB\n(1 row)</code></pre>","feature":true,"text":"在本文中，我们将一起学习如何使用docker安装PostgreSql。 我最喜欢使用[docker]的原因就是，我们真的不必太担心构建系统或配置。Docker容器非常轻巧 (消耗更少的资源)，非常易于安装和使用。 如果你还是不太了解和熟悉docker，参阅官方文档，在你的笔记本电...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"docker","slug":"docker","count":2,"path":"api/tags/docker.json"},{"name":"postgreSQL","slug":"postgreSQL","count":4,"path":"api/tags/postgreSQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8B%89%E5%8F%96Postgres%E9%95%9C%E5%83%8F%E5%B9%B6%E5%88%9B%E5%BB%BAPostgreSQL%E5%AE%B9%E5%99%A8\"><span class=\"toc-text\">拉取Postgres镜像并创建PostgreSQL容器</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87bash%E8%BF%9E%E6%8E%A5%E8%AE%BF%E9%97%AE%E5%AE%B9%E5%99%A8\"><span class=\"toc-text\">如何通过bash连接访问容器</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8psql%E7%9B%B4%E6%8E%A5%E8%BF%9E%E6%8E%A5%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">如何使用psql直接连接到数据库</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%94%B9Postgres%E5%8F%82%E6%95%B0%E9%9C%80%E8%A6%81%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">更改Postgres参数需要什么</span></a></li></ol>","author":{"name":"Sh1mwww","slug":"blog-author","avatar":"https://img.onl/qZjVAP","link":"/","description":"及时行乐","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"PostgreSQL数据的存储基础知识","uid":"ad53f22647fa1ab58dafd47d2fbb69ce","slug":"postgreSql","date":"2023-03-28T08:23:16.000Z","updated":"2023-03-28T08:51:32.235Z","comments":true,"path":"api/articles/postgreSql.json","keywords":null,"cover":"https://img.onl/pNC1WP","text":"PostgerSQL对象标识符对象标识符是PostSQL很重要的一个特征，需要熟练掌握。 OIDOID 是 PostgreSQL 内部用于标识数据库对象(数据库，表**，视图，**存储过程等等)的标识符，用4个字节的无符号整数表示。它是PostgreSQL大部分系统表的主键。 类...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"postgreSQL","slug":"postgreSQL","count":4,"path":"api/tags/postgreSQL.json"}],"author":{"name":"Sh1mwww","slug":"blog-author","avatar":"https://img.onl/qZjVAP","link":"/","description":"及时行乐","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}